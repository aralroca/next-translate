// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`templateWithLoader exporting as a arrow function - without loader page: /blog/[post]/[...catchall] | loader: getServerSideProps | hasLoader: false 1`] = `
"import __loadNamespaces from \\"next-translate/loadNamespaces\\";
import __i18nConfig from \\"@next-translate-root/i18n\\";
export default () => <div>Hello world</div>;

async function __next_translate_getServerSideProps(ctx) {
  return {
    props: await __loadNamespaces({
      ...ctx,
      pathname: \\"/blog/[post]/[...catchall]\\",
      loaderName: \\"getServerSideProps\\",
      ...__i18nConfig,
      loadLocaleFrom: (l, n) =>
        import(\`@next-translate-root/locales/\${l}/\${n}\`).then((m) => m.default),
    }),
  };
}

export { __next_translate_getServerSideProps as getServerSideProps };
"
`;

exports[`templateWithLoader exporting as a arrow function - without loader page: /index | loader: getStaticProps | hasLoader: false 1`] = `
"import __loadNamespaces from \\"next-translate/loadNamespaces\\";
import __i18nConfig from \\"@next-translate-root/i18n\\";
export default () => <div>Hello world</div>;

async function __next_translate_getStaticProps(ctx) {
  return {
    props: await __loadNamespaces({
      ...ctx,
      pathname: \\"/index\\",
      loaderName: \\"getStaticProps\\",
      ...__i18nConfig,
      loadLocaleFrom: (l, n) =>
        import(\`@next-translate-root/locales/\${l}/\${n}\`).then((m) => m.default),
    }),
  };
}

export { __next_translate_getStaticProps as getStaticProps };
"
`;

exports[`templateWithLoader exporting as a class - with loader page: /index | loader: getStaticProps | hasLoader: true 1`] = `
"import __loadNamespaces from \\"next-translate/loadNamespaces\\";
import __i18nConfig from \\"@next-translate-root/i18n\\";
import React from \\"react\\";
export default class Page extends React.Component {
  render() {
    return <div>Hello world</div>;
  }
}

function getStaticProps() {
  return {
    props: {},
  };
}

async function __next_translate_getStaticProps(ctx) {
  const [userLoaderResult, namespaceProps] = await Promise.all([
    getStaticProps(ctx),
    __loadNamespaces({
      ...ctx,
      pathname: \\"/index\\",
      loaderName: \\"getStaticProps\\",
      ...__i18nConfig,
      loadLocaleFrom: (l, n) =>
        import(\`@next-translate-root/locales/\${l}/\${n}\`).then((m) => m.default),
    }),
  ]);
  return {
    ...userLoaderResult,
    props: { ...userLoaderResult.props, ...namespaceProps },
  };
}

export { __next_translate_getStaticProps as getStaticProps };
"
`;

exports[`templateWithLoader exporting as a class in a diferent line - without loader page: /blog/[post]/[...catchall] | loader: getServerSideProps | hasLoader: false 1`] = `
"import __loadNamespaces from \\"next-translate/loadNamespaces\\";
import __i18nConfig from \\"@next-translate-root/i18n\\";
import React from \\"react\\";

class Page extends React.Component {
  render() {
    return <div>Hello world</div>;
  }
}

const myPage = Page;
export default myPage;

async function __next_translate_getServerSideProps(ctx) {
  return {
    props: await __loadNamespaces({
      ...ctx,
      pathname: \\"/blog/[post]/[...catchall]\\",
      loaderName: \\"getServerSideProps\\",
      ...__i18nConfig,
      loadLocaleFrom: (l, n) =>
        import(\`@next-translate-root/locales/\${l}/\${n}\`).then((m) => m.default),
    }),
  };
}

export { __next_translate_getServerSideProps as getServerSideProps };
"
`;

exports[`templateWithLoader exporting as a class in a diferent line - without loader page: /index | loader: getStaticProps | hasLoader: false 1`] = `
"import __loadNamespaces from \\"next-translate/loadNamespaces\\";
import __i18nConfig from \\"@next-translate-root/i18n\\";
import React from \\"react\\";

class Page extends React.Component {
  render() {
    return <div>Hello world</div>;
  }
}

const myPage = Page;
export default myPage;

async function __next_translate_getStaticProps(ctx) {
  return {
    props: await __loadNamespaces({
      ...ctx,
      pathname: \\"/index\\",
      loaderName: \\"getStaticProps\\",
      ...__i18nConfig,
      loadLocaleFrom: (l, n) =>
        import(\`@next-translate-root/locales/\${l}/\${n}\`).then((m) => m.default),
    }),
  };
}

export { __next_translate_getStaticProps as getStaticProps };
"
`;

exports[`templateWithLoader exporting as a function - with loader page: /index | loader: getStaticProps | hasLoader: true 1`] = `
"import __loadNamespaces from \\"next-translate/loadNamespaces\\";
import __i18nConfig from \\"@next-translate-root/i18n\\";
export default function Page() {
  return <div>Hello world</div>;
}
export function getStaticPaths() {
  return {};
}

function getStaticProps() {
  return {
    props: {},
  };
}

async function __next_translate_getStaticProps(ctx) {
  const [userLoaderResult, namespaceProps] = await Promise.all([
    getStaticProps(ctx),
    __loadNamespaces({
      ...ctx,
      pathname: \\"/index\\",
      loaderName: \\"getStaticProps\\",
      ...__i18nConfig,
      loadLocaleFrom: (l, n) =>
        import(\`@next-translate-root/locales/\${l}/\${n}\`).then((m) => m.default),
    }),
  ]);
  return {
    ...userLoaderResult,
    props: { ...userLoaderResult.props, ...namespaceProps },
  };
}

export { __next_translate_getStaticProps as getStaticProps };
"
`;

exports[`templateWithLoader exporting as a function - without loader page: /blog/[post]/[...catchall] | loader: getServerSideProps | hasLoader: false 1`] = `
"import __loadNamespaces from \\"next-translate/loadNamespaces\\";
import __i18nConfig from \\"@next-translate-root/i18n\\";
export default function Page() {
  return <div>Hello world</div>;
}

async function __next_translate_getServerSideProps(ctx) {
  return {
    props: await __loadNamespaces({
      ...ctx,
      pathname: \\"/blog/[post]/[...catchall]\\",
      loaderName: \\"getServerSideProps\\",
      ...__i18nConfig,
      loadLocaleFrom: (l, n) =>
        import(\`@next-translate-root/locales/\${l}/\${n}\`).then((m) => m.default),
    }),
  };
}

export { __next_translate_getServerSideProps as getServerSideProps };
"
`;

exports[`templateWithLoader exporting as a function - without loader page: /index | loader: getStaticProps | hasLoader: false 1`] = `
"import __loadNamespaces from \\"next-translate/loadNamespaces\\";
import __i18nConfig from \\"@next-translate-root/i18n\\";
export default function Page() {
  return <div>Hello world</div>;
}

async function __next_translate_getStaticProps(ctx) {
  return {
    props: await __loadNamespaces({
      ...ctx,
      pathname: \\"/index\\",
      loaderName: \\"getStaticProps\\",
      ...__i18nConfig,
      loadLocaleFrom: (l, n) =>
        import(\`@next-translate-root/locales/\${l}/\${n}\`).then((m) => m.default),
    }),
  };
}

export { __next_translate_getStaticProps as getStaticProps };
"
`;

exports[`templateWithLoader exporting as a function in diferent line - with loader page: /index | loader: getServerSideProps | hasLoader: true 1`] = `
"import __loadNamespaces from \\"next-translate/loadNamespaces\\";
import __i18nConfig from \\"@next-translate-root/i18n\\";

function Page() {
  return <div>Hello world</div>;
}

function getServerSideProps() {
  return {
    props: {},
  };
}

export default Page;

async function __next_translate_getServerSideProps(ctx) {
  const [userLoaderResult, namespaceProps] = await Promise.all([
    getServerSideProps(ctx),
    __loadNamespaces({
      ...ctx,
      pathname: \\"/index\\",
      loaderName: \\"getServerSideProps\\",
      ...__i18nConfig,
      loadLocaleFrom: (l, n) =>
        import(\`@next-translate-root/locales/\${l}/\${n}\`).then((m) => m.default),
    }),
  ]);
  return {
    ...userLoaderResult,
    props: { ...userLoaderResult.props, ...namespaceProps },
  };
}

export { __next_translate_getServerSideProps as getServerSideProps };
"
`;

exports[`templateWithLoader exporting as a function in diferent line - without loader page: /blog/[post]/[...catchall] | loader: getServerSideProps | hasLoader: false 1`] = `
"import __loadNamespaces from \\"next-translate/loadNamespaces\\";
import __i18nConfig from \\"@next-translate-root/i18n\\";

function Page() {
  return <div>Hello world</div>;
}

export default Page;

async function __next_translate_getServerSideProps(ctx) {
  return {
    props: await __loadNamespaces({
      ...ctx,
      pathname: \\"/blog/[post]/[...catchall]\\",
      loaderName: \\"getServerSideProps\\",
      ...__i18nConfig,
      loadLocaleFrom: (l, n) =>
        import(\`@next-translate-root/locales/\${l}/\${n}\`).then((m) => m.default),
    }),
  };
}

export { __next_translate_getServerSideProps as getServerSideProps };
"
`;

exports[`templateWithLoader exporting as a function in diferent line - without loader page: /index | loader: getStaticProps | hasLoader: false 1`] = `
"import __loadNamespaces from \\"next-translate/loadNamespaces\\";
import __i18nConfig from \\"@next-translate-root/i18n\\";

function Page() {
  return <div>Hello world</div>;
}

export default Page;

async function __next_translate_getStaticProps(ctx) {
  return {
    props: await __loadNamespaces({
      ...ctx,
      pathname: \\"/index\\",
      loaderName: \\"getStaticProps\\",
      ...__i18nConfig,
      loadLocaleFrom: (l, n) =>
        import(\`@next-translate-root/locales/\${l}/\${n}\`).then((m) => m.default),
    }),
  };
}

export { __next_translate_getStaticProps as getStaticProps };
"
`;

exports[`templateWithLoader loader as a arrow function page: /index | loader: getStaticProps | hasLoader: true 1`] = `
"import __loadNamespaces from \\"next-translate/loadNamespaces\\";
import __i18nConfig from \\"@next-translate-root/i18n\\";
export default function Page() {
  return <div>Hello world</div>;
}

const getStaticProps = () => ({
  props: {},
});

async function __next_translate_getStaticProps(ctx) {
  const [userLoaderResult, namespaceProps] = await Promise.all([
    getStaticProps(ctx),
    __loadNamespaces({
      ...ctx,
      pathname: \\"/index\\",
      loaderName: \\"getStaticProps\\",
      ...__i18nConfig,
      loadLocaleFrom: (l, n) =>
        import(\`@next-translate-root/locales/\${l}/\${n}\`).then((m) => m.default),
    }),
  ]);
  return {
    ...userLoaderResult,
    props: { ...userLoaderResult.props, ...namespaceProps },
  };
}

export { __next_translate_getStaticProps as getStaticProps };
"
`;

exports[`templateWithLoader loader as a wrapper page: /index | loader: getStaticProps | hasLoader: true 1`] = `
"import __loadNamespaces from \\"next-translate/loadNamespaces\\";
import __i18nConfig from \\"@next-translate-root/i18n\\";
export default function Page() {
  return <div>Hello world</div>;
}
const getStaticProps = wrapper.getStaticProps(() => ({
  props: {},
}));

async function __next_translate_getStaticProps(ctx) {
  const [userLoaderResult, namespaceProps] = await Promise.all([
    getStaticProps(ctx),
    __loadNamespaces({
      ...ctx,
      pathname: \\"/index\\",
      loaderName: \\"getStaticProps\\",
      ...__i18nConfig,
      loadLocaleFrom: (l, n) =>
        import(\`@next-translate-root/locales/\${l}/\${n}\`).then((m) => m.default),
    }),
  ]);
  return {
    ...userLoaderResult,
    props: { ...userLoaderResult.props, ...namespaceProps },
  };
}

export { __next_translate_getStaticProps as getStaticProps };
"
`;

exports[`templateWithLoader loader imported to another place page: /index | loader: getStaticProps | hasLoader: true 1`] = `
"import __loadNamespaces from \\"next-translate/loadNamespaces\\";
import __i18nConfig from \\"@next-translate-root/i18n\\";
import getStaticProps from \\"somewhere/getStaticProps\\";
import getStaticPaths from \\"somewhere/getStaticPaths\\";
const config = {};
export default function Page() {
  return <div>Hello world</div>;
}
export { config, getStaticPaths };

async function __next_translate_getStaticProps(ctx) {
  const [userLoaderResult, namespaceProps] = await Promise.all([
    getStaticProps(ctx),
    __loadNamespaces({
      ...ctx,
      pathname: \\"/index\\",
      loaderName: \\"getStaticProps\\",
      ...__i18nConfig,
      loadLocaleFrom: (l, n) =>
        import(\`@next-translate-root/locales/\${l}/\${n}\`).then((m) => m.default),
    }),
  ]);
  return {
    ...userLoaderResult,
    props: { ...userLoaderResult.props, ...namespaceProps },
  };
}

export { __next_translate_getStaticProps as getStaticProps };
"
`;

exports[`templateWithLoader loader with named import to another place + rename page: /index | loader: getStaticProps | hasLoader: true 1`] = `
"import __loadNamespaces from \\"next-translate/loadNamespaces\\";
import __i18nConfig from \\"@next-translate-root/i18n\\";
import { getStaticPropsA as getStaticProps } from \\"somewhere/getStaticProps\\";
import { getStaticProps as getStaticPaths } from \\"somewhere/getStaticPaths\\";
const config = {};
export default function Page() {
  return <div>Hello world</div>;
}
export { config, getStaticPaths };

async function __next_translate_getStaticProps(ctx) {
  const [userLoaderResult, namespaceProps] = await Promise.all([
    getStaticProps(ctx),
    __loadNamespaces({
      ...ctx,
      pathname: \\"/index\\",
      loaderName: \\"getStaticProps\\",
      ...__i18nConfig,
      loadLocaleFrom: (l, n) =>
        import(\`@next-translate-root/locales/\${l}/\${n}\`).then((m) => m.default),
    }),
  ]);
  return {
    ...userLoaderResult,
    props: { ...userLoaderResult.props, ...namespaceProps },
  };
}

export { __next_translate_getStaticProps as getStaticProps };
"
`;

exports[`templateWithLoader loader with named import to another place page: /index | loader: getStaticProps | hasLoader: true 1`] = `
"import __loadNamespaces from \\"next-translate/loadNamespaces\\";
import __i18nConfig from \\"@next-translate-root/i18n\\";
import { getStaticProps } from \\"somewhere/getStaticProps\\";
import { getStaticPaths } from \\"somewhere/getStaticPaths\\";
const config = {};
export default function Page() {
  return <div>Hello world</div>;
}
export { config, getStaticPaths };

async function __next_translate_getStaticProps(ctx) {
  const [userLoaderResult, namespaceProps] = await Promise.all([
    getStaticProps(ctx),
    __loadNamespaces({
      ...ctx,
      pathname: \\"/index\\",
      loaderName: \\"getStaticProps\\",
      ...__i18nConfig,
      loadLocaleFrom: (l, n) =>
        import(\`@next-translate-root/locales/\${l}/\${n}\`).then((m) => m.default),
    }),
  ]);
  return {
    ...userLoaderResult,
    props: { ...userLoaderResult.props, ...namespaceProps },
  };
}

export { __next_translate_getStaticProps as getStaticProps };
"
`;

exports[`templateWithLoader loader with one named import to another place page: /index | loader: getStaticProps | hasLoader: true 1`] = `
"import __loadNamespaces from \\"next-translate/loadNamespaces\\";
import __i18nConfig from \\"@next-translate-root/i18n\\";
import {
  getStaticPaths,
  getStaticProps,
  config,
} from \\"somewhere/getStaticProps\\";
export default function Page() {
  const test = \\"getStaticProps\\";
  console.log(\\"This should log getStaticProps without any modification\\");
  return <div>Hello getStaticProps</div>;
}
export { config, getStaticPaths };

async function __next_translate_getStaticProps(ctx) {
  const [userLoaderResult, namespaceProps] = await Promise.all([
    getStaticProps(ctx),
    __loadNamespaces({
      ...ctx,
      pathname: \\"/index\\",
      loaderName: \\"getStaticProps\\",
      ...__i18nConfig,
      loadLocaleFrom: (l, n) =>
        import(\`@next-translate-root/locales/\${l}/\${n}\`).then((m) => m.default),
    }),
  ]);
  return {
    ...userLoaderResult,
    props: { ...userLoaderResult.props, ...namespaceProps },
  };
}

export { __next_translate_getStaticProps as getStaticProps };
"
`;

exports[`templateWithLoader should add "revalidate: 55" prop into getStaticProps page: /index | loader: getStaticProps | hasLoader: true | revalidate: 55 1`] = `
"import __loadNamespaces from \\"next-translate/loadNamespaces\\";
import __i18nConfig from \\"@next-translate-root/i18n\\";

function Page() {
  return <div>Hello world</div>;
}

export default Page;

async function __next_translate_getStaticProps(ctx) {
  return {
    revalidate: 55,
    props: await __loadNamespaces({
      ...ctx,
      pathname: \\"/index\\",
      loaderName: \\"getStaticProps\\",
      ...__i18nConfig,
      loadLocaleFrom: (l, n) =>
        import(\`@next-translate-root/locales/\${l}/\${n}\`).then((m) => m.default),
    }),
  };
}

export { __next_translate_getStaticProps as getStaticProps };
"
`;

exports[`templateWithLoader should add the "as" on the import only when is necessary page: /index | loader: getStaticProps | hasLoader: true 1`] = `
"import __loadNamespaces from \\"next-translate/loadNamespaces\\";
import __i18nConfig from \\"@next-translate-root/i18n\\";
import { getStaticProps as getStaticPaths } from \\"somewhere/getStaticPaths\\";
import { fake_getStaticProps } from \\"somewhere/getStaticPaths\\";
import {
  getStaticPropsA,
  getStaticProps,
  getStaticPropsB,
} from \\"somewhere/getStaticProps\\"; // Comment to import getStaticProps

const a = \\"import { getStaticProps }\\";

async function __next_translate_getStaticProps(ctx) {
  return {
    props: await __loadNamespaces({
      ...ctx,
      pathname: \\"/index\\",
      loaderName: \\"getStaticProps\\",
      ...__i18nConfig,
      loadLocaleFrom: (l, n) =>
        import(\`@next-translate-root/locales/\${l}/\${n}\`).then((m) => m.default),
    }),
  };
}

export { __next_translate_getStaticProps as getStaticProps };
"
`;

exports[`templateWithLoader should allow developers to override revalidate prop per page, by having the "default" revalidate defined before "...res" page: /index | loader: getStaticProps | hasLoader: true | revalidate: 88 1`] = `
"import __loadNamespaces from \\"next-translate/loadNamespaces\\";
import __i18nConfig from \\"@next-translate-root/i18n\\";
export default function Page() {
  return <div>Hello world</div>;
}

function getStaticProps() {
  return {
    revalidate: 10,
    props: {
      prop1: \\"hello\\",
    },
  };
}

async function __next_translate_getStaticProps(ctx) {
  const [userLoaderResult, namespaceProps] = await Promise.all([
    getStaticProps(ctx),
    __loadNamespaces({
      ...ctx,
      pathname: \\"/index\\",
      loaderName: \\"getStaticProps\\",
      ...__i18nConfig,
      loadLocaleFrom: (l, n) =>
        import(\`@next-translate-root/locales/\${l}/\${n}\`).then((m) => m.default),
    }),
  ]);
  return {
    revalidate: 88,
    ...userLoaderResult,
    props: { ...userLoaderResult.props, ...namespaceProps },
  };
}

export { __next_translate_getStaticProps as getStaticProps };
"
`;

exports[`templateWithLoader should not add "revalidate" prop into getStaticProps because revalidate < 0 page: /index | loader: getStaticProps | hasLoader: true | revalidate: -1 1`] = `
"import __loadNamespaces from \\"next-translate/loadNamespaces\\";
import __i18nConfig from \\"@next-translate-root/i18n\\";

function Page() {
  return <div>Hello world</div>;
}

export default Page;

async function __next_translate_getStaticProps(ctx) {
  return {
    props: await __loadNamespaces({
      ...ctx,
      pathname: \\"/index\\",
      loaderName: \\"getStaticProps\\",
      ...__i18nConfig,
      loadLocaleFrom: (l, n) =>
        import(\`@next-translate-root/locales/\${l}/\${n}\`).then((m) => m.default),
    }),
  };
}

export { __next_translate_getStaticProps as getStaticProps };
"
`;

exports[`templateWithLoader should not add "revalidate" prop into getStaticProps because revalidate = 0 page: /index | loader: getStaticProps | hasLoader: true | revalidate: 0 1`] = `
"import __loadNamespaces from \\"next-translate/loadNamespaces\\";
import __i18nConfig from \\"@next-translate-root/i18n\\";

function Page() {
  return <div>Hello world</div>;
}

export default Page;

async function __next_translate_getStaticProps(ctx) {
  return {
    props: await __loadNamespaces({
      ...ctx,
      pathname: \\"/index\\",
      loaderName: \\"getStaticProps\\",
      ...__i18nConfig,
      loadLocaleFrom: (l, n) =>
        import(\`@next-translate-root/locales/\${l}/\${n}\`).then((m) => m.default),
    }),
  };
}

export { __next_translate_getStaticProps as getStaticProps };
"
`;

exports[`templateWithLoader should remove exports of existings loaders with "as" page: /index | loader: getStaticProps | hasLoader: true 1`] = `
"import __loadNamespaces from \\"next-translate/loadNamespaces\\";
import __i18nConfig from \\"@next-translate-root/i18n\\";
const test = 0,
  anotherThing = 0,
  something = 0,
  getStaticPropsA = 0,
  getStaticPropsB = 0;
export { test as getStaticProps1 };
export { anotherThing };
export { something, getStaticPropsA as getStaticProps2 };
export { getStaticPropsB };

async function __next_translate_getStaticProps(ctx) {
  const [userLoaderResult, namespaceProps] = await Promise.all([
    test(ctx),
    __loadNamespaces({
      ...ctx,
      pathname: \\"/index\\",
      loaderName: \\"getStaticProps\\",
      ...__i18nConfig,
      loadLocaleFrom: (l, n) =>
        import(\`@next-translate-root/locales/\${l}/\${n}\`).then((m) => m.default),
    }),
  ]);
  return {
    ...userLoaderResult,
    props: { ...userLoaderResult.props, ...namespaceProps },
  };
}

export { __next_translate_getStaticProps as getStaticProps };
"
`;

exports[`templateWithLoader should use the revalidate value already present on getStaticProps arrow function page: /index | loader: getStaticProps | hasLoader: true | revalidate: 77 1`] = `
"import __loadNamespaces from \\"next-translate/loadNamespaces\\";
import __i18nConfig from \\"@next-translate-root/i18n\\";
import { GetStaticProps } from \\"next\\";
export default function Page() {
  return <div>Hello world</div>;
}

const getStaticProps: GetStaticProps = () => {
  return {
    revalidate: 10,
    props: {
      prop1: \\"hello\\",
    },
  };
};

async function __next_translate_getStaticProps(ctx) {
  const [userLoaderResult, namespaceProps] = await Promise.all([
    getStaticProps(ctx),
    __loadNamespaces({
      ...ctx,
      pathname: \\"/index\\",
      loaderName: \\"getStaticProps\\",
      ...__i18nConfig,
      loadLocaleFrom: (l, n) =>
        import(\`@next-translate-root/locales/\${l}/\${n}\`).then((m) => m.default),
    }),
  ]);
  return {
    revalidate: 77,
    ...userLoaderResult,
    props: { ...userLoaderResult.props, ...namespaceProps },
  };
}

export { __next_translate_getStaticProps as getStaticProps };
"
`;
