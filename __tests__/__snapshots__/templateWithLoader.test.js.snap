// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`templateWithLoader exporting as a arrow function - without loader page: /blog/[post]/[...catchall] | loader: getServerSideProps | hasLoader: false 1`] = `
"import __i18nConfig from \\"@next-translate-root/i18n\\";
import __loadNamespaces from \\"next-translate/loadNamespaces\\";

(\\"$SomeString$\\");
$$SomeString$$ & $SomeString$ & \`$SomeString$\`;
(\\".cssClass{content:' ';\\");
('Hello \\"world\\"');
export default () => <div>Hello world</div>;

export async function getServerSideProps(ctx) {
  return {
    props: {
      ...(await __loadNamespaces({
        ...ctx,
        pathname: \\"/blog/[post]/[...catchall]\\",
        loaderName: \\"getServerSideProps\\",
        ...__i18nConfig,
        loadLocaleFrom: (l, n) =>
          import(\`@next-translate-root/locales/\${l}/\${n}\`).then(
            (m) => m.default
          ),
      })),
    },
  };
}
"
`;

exports[`templateWithLoader exporting as a arrow function - without loader page: /index | loader: getStaticProps | hasLoader: false 1`] = `
"import __i18nConfig from \\"@next-translate-root/i18n\\";
import __loadNamespaces from \\"next-translate/loadNamespaces\\";

(\\"$SomeString$\\");
$$SomeString$$ & $SomeString$ & \`$SomeString$\`;
(\\".cssClass{content:' ';\\");
('Hello \\"world\\"');
export default () => <div>Hello world</div>;

export async function getStaticProps(ctx) {
  return {
    props: {
      ...(await __loadNamespaces({
        ...ctx,
        pathname: \\"/index\\",
        loaderName: \\"getStaticProps\\",
        ...__i18nConfig,
        loadLocaleFrom: (l, n) =>
          import(\`@next-translate-root/locales/\${l}/\${n}\`).then(
            (m) => m.default
          ),
      })),
    },
  };
}
"
`;

exports[`templateWithLoader exporting as a class - with loader page: /index | loader: getStaticProps | hasLoader: true 1`] = `
"import __i18nConfig from \\"@next-translate-root/i18n\\";
import __loadNamespaces from \\"next-translate/loadNamespaces\\";

(\\"$SomeString$\\");
$$SomeString$$ & $SomeString$ & \`$SomeString$\`;
(\\".cssClass{content:' ';\\");
('Hello \\"world\\"');

import React from \\"react\\";

export default class Page extends React.Component {
  render() {
    return <div>Hello world</div>;
  }
}

function _getStaticProps() {
  return { props: {} };
}

export async function getStaticProps(ctx) {
  let res = _getStaticProps(ctx);
  if (typeof res.then === \\"function\\") res = await res;
  return {
    ...res,
    props: {
      ...(res.props || {}),
      ...(await __loadNamespaces({
        ...ctx,
        pathname: \\"/index\\",
        loaderName: \\"getStaticProps\\",
        ...__i18nConfig,
        loadLocaleFrom: (l, n) =>
          import(\`@next-translate-root/locales/\${l}/\${n}\`).then(
            (m) => m.default
          ),
      })),
    },
  };
}
"
`;

exports[`templateWithLoader exporting as a class in a diferent line - without loader page: /blog/[post]/[...catchall] | loader: getServerSideProps | hasLoader: false 1`] = `
"import __i18nConfig from \\"@next-translate-root/i18n\\";
import __loadNamespaces from \\"next-translate/loadNamespaces\\";

(\\"$SomeString$\\");
$$SomeString$$ & $SomeString$ & \`$SomeString$\`;
(\\".cssClass{content:' ';\\");
('Hello \\"world\\"');

import React from \\"react\\";

class Page extends React.Component {
  render() {
    return <div>Hello world</div>;
  }
}

const myPage = Page;

export default myPage;

export async function getServerSideProps(ctx) {
  return {
    props: {
      ...(await __loadNamespaces({
        ...ctx,
        pathname: \\"/blog/[post]/[...catchall]\\",
        loaderName: \\"getServerSideProps\\",
        ...__i18nConfig,
        loadLocaleFrom: (l, n) =>
          import(\`@next-translate-root/locales/\${l}/\${n}\`).then(
            (m) => m.default
          ),
      })),
    },
  };
}
"
`;

exports[`templateWithLoader exporting as a class in a diferent line - without loader page: /index | loader: getStaticProps | hasLoader: false 1`] = `
"import __i18nConfig from \\"@next-translate-root/i18n\\";
import __loadNamespaces from \\"next-translate/loadNamespaces\\";

(\\"$SomeString$\\");
$$SomeString$$ & $SomeString$ & \`$SomeString$\`;
(\\".cssClass{content:' ';\\");
('Hello \\"world\\"');

import React from \\"react\\";

class Page extends React.Component {
  render() {
    return <div>Hello world</div>;
  }
}

const myPage = Page;

export default myPage;

export async function getStaticProps(ctx) {
  return {
    props: {
      ...(await __loadNamespaces({
        ...ctx,
        pathname: \\"/index\\",
        loaderName: \\"getStaticProps\\",
        ...__i18nConfig,
        loadLocaleFrom: (l, n) =>
          import(\`@next-translate-root/locales/\${l}/\${n}\`).then(
            (m) => m.default
          ),
      })),
    },
  };
}
"
`;

exports[`templateWithLoader exporting as a function - with loader page: /index | loader: getStaticProps | hasLoader: true 1`] = `
"import __i18nConfig from \\"@next-translate-root/i18n\\";
import __loadNamespaces from \\"next-translate/loadNamespaces\\";

(\\"$SomeString$\\");
$$SomeString$$ & $SomeString$ & \`$SomeString$\`;
(\\".cssClass{content:' ';\\");
('Hello \\"world\\"');

export default function Page() {
  return <div>Hello world</div>;
}

export function getStaticPaths() {
  return {};
}

function _getStaticProps() {
  return { props: {} };
}

export async function getStaticProps(ctx) {
  let res = _getStaticProps(ctx);
  if (typeof res.then === \\"function\\") res = await res;
  return {
    ...res,
    props: {
      ...(res.props || {}),
      ...(await __loadNamespaces({
        ...ctx,
        pathname: \\"/index\\",
        loaderName: \\"getStaticProps\\",
        ...__i18nConfig,
        loadLocaleFrom: (l, n) =>
          import(\`@next-translate-root/locales/\${l}/\${n}\`).then(
            (m) => m.default
          ),
      })),
    },
  };
}
"
`;

exports[`templateWithLoader exporting as a function - without loader page: /blog/[post]/[...catchall] | loader: getServerSideProps | hasLoader: false 1`] = `
"import __i18nConfig from \\"@next-translate-root/i18n\\";
import __loadNamespaces from \\"next-translate/loadNamespaces\\";

(\\"$SomeString$\\");
$$SomeString$$ & $SomeString$ & \`$SomeString$\`;
(\\".cssClass{content:' ';\\");
('Hello \\"world\\"');

export default function Page() {
  return <div>Hello world</div>;
}

export async function getServerSideProps(ctx) {
  return {
    props: {
      ...(await __loadNamespaces({
        ...ctx,
        pathname: \\"/blog/[post]/[...catchall]\\",
        loaderName: \\"getServerSideProps\\",
        ...__i18nConfig,
        loadLocaleFrom: (l, n) =>
          import(\`@next-translate-root/locales/\${l}/\${n}\`).then(
            (m) => m.default
          ),
      })),
    },
  };
}
"
`;

exports[`templateWithLoader exporting as a function - without loader page: /index | loader: getStaticProps | hasLoader: false 1`] = `
"import __i18nConfig from \\"@next-translate-root/i18n\\";
import __loadNamespaces from \\"next-translate/loadNamespaces\\";

(\\"$SomeString$\\");
$$SomeString$$ & $SomeString$ & \`$SomeString$\`;
(\\".cssClass{content:' ';\\");
('Hello \\"world\\"');

export default function Page() {
  return <div>Hello world</div>;
}

export async function getStaticProps(ctx) {
  return {
    props: {
      ...(await __loadNamespaces({
        ...ctx,
        pathname: \\"/index\\",
        loaderName: \\"getStaticProps\\",
        ...__i18nConfig,
        loadLocaleFrom: (l, n) =>
          import(\`@next-translate-root/locales/\${l}/\${n}\`).then(
            (m) => m.default
          ),
      })),
    },
  };
}
"
`;

exports[`templateWithLoader exporting as a function in diferent line - with loader page: /index | loader: getServerSideProps | hasLoader: true 1`] = `
"import __i18nConfig from \\"@next-translate-root/i18n\\";
import __loadNamespaces from \\"next-translate/loadNamespaces\\";

(\\"$SomeString$\\");
$$SomeString$$ & $SomeString$ & \`$SomeString$\`;
(\\".cssClass{content:' ';\\");
('Hello \\"world\\"');

function Page() {
  return <div>Hello world</div>;
}

function _getServerSideProps() {
  return { props: {} };
}

export default Page;

export async function getServerSideProps(ctx) {
  let res = _getServerSideProps(ctx);
  if (typeof res.then === \\"function\\") res = await res;
  return {
    ...res,
    props: {
      ...(res.props || {}),
      ...(await __loadNamespaces({
        ...ctx,
        pathname: \\"/index\\",
        loaderName: \\"getServerSideProps\\",
        ...__i18nConfig,
        loadLocaleFrom: (l, n) =>
          import(\`@next-translate-root/locales/\${l}/\${n}\`).then(
            (m) => m.default
          ),
      })),
    },
  };
}
"
`;

exports[`templateWithLoader exporting as a function in diferent line - without loader page: /blog/[post]/[...catchall] | loader: getServerSideProps | hasLoader: false 1`] = `
"import __i18nConfig from \\"@next-translate-root/i18n\\";
import __loadNamespaces from \\"next-translate/loadNamespaces\\";

(\\"$SomeString$\\");
$$SomeString$$ & $SomeString$ & \`$SomeString$\`;
(\\".cssClass{content:' ';\\");
('Hello \\"world\\"');

function Page() {
  return <div>Hello world</div>;
}

export default Page;

export async function getServerSideProps(ctx) {
  return {
    props: {
      ...(await __loadNamespaces({
        ...ctx,
        pathname: \\"/blog/[post]/[...catchall]\\",
        loaderName: \\"getServerSideProps\\",
        ...__i18nConfig,
        loadLocaleFrom: (l, n) =>
          import(\`@next-translate-root/locales/\${l}/\${n}\`).then(
            (m) => m.default
          ),
      })),
    },
  };
}
"
`;

exports[`templateWithLoader exporting as a function in diferent line - without loader page: /index | loader: getStaticProps | hasLoader: false 1`] = `
"import __i18nConfig from \\"@next-translate-root/i18n\\";
import __loadNamespaces from \\"next-translate/loadNamespaces\\";

(\\"$SomeString$\\");
$$SomeString$$ & $SomeString$ & \`$SomeString$\`;
(\\".cssClass{content:' ';\\");
('Hello \\"world\\"');

function Page() {
  return <div>Hello world</div>;
}

export default Page;

export async function getStaticProps(ctx) {
  return {
    props: {
      ...(await __loadNamespaces({
        ...ctx,
        pathname: \\"/index\\",
        loaderName: \\"getStaticProps\\",
        ...__i18nConfig,
        loadLocaleFrom: (l, n) =>
          import(\`@next-translate-root/locales/\${l}/\${n}\`).then(
            (m) => m.default
          ),
      })),
    },
  };
}
"
`;

exports[`templateWithLoader loader as a arrow function page: /index | loader: getStaticProps | hasLoader: true 1`] = `
"import __i18nConfig from \\"@next-translate-root/i18n\\";
import __loadNamespaces from \\"next-translate/loadNamespaces\\";

(\\"$SomeString$\\");
$$SomeString$$ & $SomeString$ & \`$SomeString$\`;
(\\".cssClass{content:' ';\\");
('Hello \\"world\\"');

export default function Page() {
  return <div>Hello world</div>;
}

const _getStaticProps = () => ({ props: {} });

export async function getStaticProps(ctx) {
  let res = _getStaticProps(ctx);
  if (typeof res.then === \\"function\\") res = await res;
  return {
    ...res,
    props: {
      ...(res.props || {}),
      ...(await __loadNamespaces({
        ...ctx,
        pathname: \\"/index\\",
        loaderName: \\"getStaticProps\\",
        ...__i18nConfig,
        loadLocaleFrom: (l, n) =>
          import(\`@next-translate-root/locales/\${l}/\${n}\`).then(
            (m) => m.default
          ),
      })),
    },
  };
}
"
`;

exports[`templateWithLoader loader imported to another place page: /index | loader: getStaticProps | hasLoader: true 1`] = `
"import __i18nConfig from \\"@next-translate-root/i18n\\";
import __loadNamespaces from \\"next-translate/loadNamespaces\\";

(\\"$SomeString$\\");
$$SomeString$$ & $SomeString$ & \`$SomeString$\`;
(\\".cssClass{content:' ';\\");
('Hello \\"world\\"');

import _getStaticProps from \\"somewhere/getStaticProps\\";
import getStaticPaths from \\"somewhere/getStaticPaths\\";

const config = {};

export default function Page() {
  return <div>Hello world</div>;
}

export { config, getStaticPaths };

export async function getStaticProps(ctx) {
  let res = _getStaticProps(ctx);
  if (typeof res.then === \\"function\\") res = await res;
  return {
    ...res,
    props: {
      ...(res.props || {}),
      ...(await __loadNamespaces({
        ...ctx,
        pathname: \\"/index\\",
        loaderName: \\"getStaticProps\\",
        ...__i18nConfig,
        loadLocaleFrom: (l, n) =>
          import(\`@next-translate-root/locales/\${l}/\${n}\`).then(
            (m) => m.default
          ),
      })),
    },
  };
}
"
`;

exports[`templateWithLoader loader with named import to another place + rename page: /index | loader: getStaticProps | hasLoader: true 1`] = `
"import __i18nConfig from \\"@next-translate-root/i18n\\";
import __loadNamespaces from \\"next-translate/loadNamespaces\\";

(\\"$SomeString$\\");
$$SomeString$$ & $SomeString$ & \`$SomeString$\`;
(\\".cssClass{content:' ';\\");
('Hello \\"world\\"');

import { getStaticPropsA as _getStaticProps } from \\"somewhere/getStaticProps\\";
import { getStaticProps as getStaticPaths } from \\"somewhere/getStaticPaths\\";

const config = {};

export default function Page() {
  return <div>Hello world</div>;
}

export { config, getStaticPaths };

export async function getStaticProps(ctx) {
  let res = _getStaticProps(ctx);
  if (typeof res.then === \\"function\\") res = await res;
  return {
    ...res,
    props: {
      ...(res.props || {}),
      ...(await __loadNamespaces({
        ...ctx,
        pathname: \\"/index\\",
        loaderName: \\"getStaticProps\\",
        ...__i18nConfig,
        loadLocaleFrom: (l, n) =>
          import(\`@next-translate-root/locales/\${l}/\${n}\`).then(
            (m) => m.default
          ),
      })),
    },
  };
}
"
`;

exports[`templateWithLoader loader with named import to another place page: /index | loader: getStaticProps | hasLoader: true 1`] = `
"import __i18nConfig from \\"@next-translate-root/i18n\\";
import __loadNamespaces from \\"next-translate/loadNamespaces\\";

(\\"$SomeString$\\");
$$SomeString$$ & $SomeString$ & \`$SomeString$\`;
(\\".cssClass{content:' ';\\");
('Hello \\"world\\"');

import { getStaticProps as _getStaticProps } from \\"somewhere/getStaticProps\\";
import { getStaticPaths } from \\"somewhere/getStaticPaths\\";

const config = {};

export default function Page() {
  return <div>Hello world</div>;
}

export { config, getStaticPaths };

export async function getStaticProps(ctx) {
  let res = _getStaticProps(ctx);
  if (typeof res.then === \\"function\\") res = await res;
  return {
    ...res,
    props: {
      ...(res.props || {}),
      ...(await __loadNamespaces({
        ...ctx,
        pathname: \\"/index\\",
        loaderName: \\"getStaticProps\\",
        ...__i18nConfig,
        loadLocaleFrom: (l, n) =>
          import(\`@next-translate-root/locales/\${l}/\${n}\`).then(
            (m) => m.default
          ),
      })),
    },
  };
}
"
`;

exports[`templateWithLoader loader with one named import to another place page: /index | loader: getStaticProps | hasLoader: true 1`] = `
"import __i18nConfig from \\"@next-translate-root/i18n\\";
import __loadNamespaces from \\"next-translate/loadNamespaces\\";

(\\"$SomeString$\\");
$$SomeString$$ & $SomeString$ & \`$SomeString$\`;
(\\".cssClass{content:' ';\\");
('Hello \\"world\\"');

import {
  getStaticPaths,
  getStaticProps as _getStaticProps,
  config,
} from \\"somewhere/getStaticProps\\";

export default function Page() {
  const test = \\"getStaticProps\\";
  console.log(\\"This should log getStaticProps without any modification\\");
  return <div>Hello getStaticProps</div>;
}

export { config, getStaticPaths };

export async function getStaticProps(ctx) {
  let res = _getStaticProps(ctx);
  if (typeof res.then === \\"function\\") res = await res;
  return {
    ...res,
    props: {
      ...(res.props || {}),
      ...(await __loadNamespaces({
        ...ctx,
        pathname: \\"/index\\",
        loaderName: \\"getStaticProps\\",
        ...__i18nConfig,
        loadLocaleFrom: (l, n) =>
          import(\`@next-translate-root/locales/\${l}/\${n}\`).then(
            (m) => m.default
          ),
      })),
    },
  };
}
"
`;

exports[`templateWithLoader should add the "as" on the import only when is necessary page: /index | loader: getStaticProps | hasLoader: true 1`] = `
"import __i18nConfig from \\"@next-translate-root/i18n\\";
import __loadNamespaces from \\"next-translate/loadNamespaces\\";

(\\"$SomeString$\\");
$$SomeString$$ & $SomeString$ & \`$SomeString$\`;
(\\".cssClass{content:' ';\\");
('Hello \\"world\\"');
import { getStaticProps as _getStaticProps } from \\"somewhere/getStaticProps\\";
import { getStaticProps as _getStaticProps } from \\"somewhere/getStaticProps\\";

import {
  getStaticPropsA,
  getStaticProps as _getStaticProps,
  getStaticPropsB,
} from \\"somewhere/getStaticProps\\";
import { getStaticProps as getStaticPaths } from \\"somewhere/getStaticPaths\\";
import { fake_getStaticProps } from \\"somewhere/getStaticPaths\\";

import {
  getStaticPropsA,
  getStaticProps as _getStaticProps,
  getStaticPropsB,
} from \\"somewhere/getStaticProps\\";

import {
  getStaticPropsA,
  getStaticProps as _getStaticProps,
  getStaticPropsB,
} from \\"somewhere/getStaticProps\\";
let _getStaticProps = false;
// Comment to import getStaticProps
const a = \\"import { getStaticProps }\\";

export async function getStaticProps(ctx) {
  let res = _getStaticProps(ctx);
  if (typeof res.then === \\"function\\") res = await res;
  return {
    ...res,
    props: {
      ...(res.props || {}),
      ...(await __loadNamespaces({
        ...ctx,
        pathname: \\"/index\\",
        loaderName: \\"getStaticProps\\",
        ...__i18nConfig,
        loadLocaleFrom: (l, n) =>
          import(\`@next-translate-root/locales/\${l}/\${n}\`).then(
            (m) => m.default
          ),
      })),
    },
  };
}
"
`;

exports[`templateWithLoader should remove exports of existings loaders with "as" page: /index | loader: getStaticProps | hasLoader: true 1`] = `
"import __i18nConfig from \\"@next-translate-root/i18n\\";
import __loadNamespaces from \\"next-translate/loadNamespaces\\";

(\\"$SomeString$\\");
$$SomeString$$ & $SomeString$ & \`$SomeString$\`;
(\\".cssClass{content:' ';\\");
('Hello \\"world\\"');

export { anotherThing };

export { something };
export { something };
export { something, getStaticPropsB };

export async function getStaticProps(ctx) {
  let res = _getStaticProps(ctx);
  if (typeof res.then === \\"function\\") res = await res;
  return {
    ...res,
    props: {
      ...(res.props || {}),
      ...(await __loadNamespaces({
        ...ctx,
        pathname: \\"/index\\",
        loaderName: \\"getStaticProps\\",
        ...__i18nConfig,
        loadLocaleFrom: (l, n) =>
          import(\`@next-translate-root/locales/\${l}/\${n}\`).then(
            (m) => m.default
          ),
      })),
    },
  };
}
"
`;
